#!/bin/bash

#   cpip -- portable packaging for conda + pip environments
#   Copyright (C) 2018  Alden Goldstein, Eigen Technologies
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <https://www.gnu.org/licenses/>.

usage()
{
    # NOTE: if you update this print message, please update README.md
    echo "$help" "usage: $script_name <arguments> [options]"
    echo "$s___"
    echo "$s___" "arguments: (at least one is required)"
    echo "$s___" "  --slip, -s                Remove source cache, lockfiles, index cache, and"
    echo "$s___" "                            packages for conda."
    echo "$s___" "  --tarballs, -t            Remove downloaded tarballs for conda. Best to use"
    echo "$s___" "                            only if there is a shortage of disk space."
    echo "$s___" "  --pip-cache, -p           Remove cpip's pip cache."
    echo "$s___"
    echo "$s___" "options:"
    echo "$s___" "  --yes                     Consent to deletion without prompts."
    echo "$s___" "  --color                   Force colored output."
    echo "$s___" "  --no-color                Disable colored output."
    echo "$s___" "  --quiet, -q               Suppress output for commands."
    echo "$s___" "  --help, -h                Show this help message then exit."
}

arg_count=0
while [[ $# -gt 0 ]]; do
    case $1 in
        -s|--slip)
            slip="$1"
            ((++arg_count))
            shift # past argument
            ;;
        -t|--tarballs)
            tarballs="$1"
            ((++arg_count))
            shift # past argument
            ;;
        -p|--pip-cache)
            pip_cache="$1"
            ((++arg_count))
            shift # past argument
            ;;
        --yes)
            yes="$1"
            shift # past argument
            ;;
        --color)
            shift # past argument
            ;;
        --no-color)
            shift # past argument
            ;;
        -q|--quiet)
            quiet="$1"
            export PIP_QUIET=1
            shift # past argument
            ;;
        -h|--help)
            usage
            exit 0
            ;;
        *)
            >&2 echo "$error" "'$1' not a recognized argument/option"
            >&2 usage
            exit 1
            ;;
    esac
done

if [[ $arg_count -eq 0 ]]; then
    >&2 echo "$error" "at least one argument is required"
    >&2 usage
    exit 1
fi

# exit as soon as a command fails and print error
trap err_trap ERR SIGINT SIGTERM SIGKILL

conda_initiate
remove_old_env

if [[ $slip ]]; then
    echo "$info" "removing source cache, lockfiles, index cache, and packages for conda..."
    conda clean -slip $yes $quiet $log_quiet
fi

if [[ $tarballs ]]; then
    echo "$info" "removing downloaded tarballs for conda..."
    conda clean --tarballs $yes $quiet $log_quiet
fi

if [[ $pip_cache ]]; then
    set_pip_cache_dir
    echo "$info" "clearing pip cache directory '$PIP_CACHE_DIR'..."
    rm -rf "$PIP_CACHE_DIR"
fi

echo "$info" "Done!"
